/********************
** Breakpoints
********************/

$bp-small:				768;
$bp-medium:				1024;
$bp-large:				1200;  


/********************
** Media Queries
********************/

$sml:				"only screen and (min-width: #{$bp-small}px)";
$med:				"only screen and (min-width: #{$bp-medium}px)";
$lrg:				"only screen and (min-width: #{$bp-large}px)";
$retina:				"only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx)";

@mixin bp($point){
    @if $point == sml {
      @media #{$sml} { @content; }
    }
    @else if $point == med {
      @media #{$med} { @content; }
    }
    @else if $point == lrg {
      @media #{$lrg}  { @content; }
    }
    @else if $point == retina {
      @media #{$retina}  { @content; }
    }
}

@mixin font-size($pixelSize: 16) {
  font-size: #{$pixelSize}px;
  font-size: #{$pixelSize / 16}rem;
}

@mixin line-height($pixelSize: 16) {
  line-height: #{$pixelSize}px;
  line-height: #{$pixelSize / 16}rem;
}

@mixin letter-spacing($psVal) {//converts photoshop tracking into letter spacing
    letter-spacing: #{$psVal / 1000}em;
}
@mixin transition($property) {
  -webkit-transition: $property;
  -moz-transition:  $property;
  -ms-transition:   $property;
  -o-transition:    $property;
  transition:     $property;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-ms-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin animation($animation) {
  -webkit-animation: #{$animation};
  -ms-animation: #{$animation};
  -moz-animation: #{$animation};
  animation: #{$animation};
}

@mixin animation-delay($animation-delay) {
  -webkit-animation-delay: #{$animation-delay};
  -ms-animation-delay: #{$animation-delay};
  -moz-animation-delay: #{$animation-delay};
  animation-delay: #{$animation-delay};
}
@mixin transform($transform) {
  -webkit-transform:  $transform;
  -moz-transform:   $transform;
  -ms-transform:    $transform;
  -o-transform:     $transform;
  transform:      $transform;
}


/********************
** Colors
********************/

$f-serif:   'Lora', serif;
$f-serif2:  'Merriweather', serif;
$f-sans:    'Open Sans', sans-serif;

/********************
** Colors
********************/

$c-white:         #fdfdfd;
$c-red:           #B00033;
$c-blue--dark:    #2D2D48;
$c-blue--light:   #00B4FF;
$c-gray--light:   #EEEEEE;
$c-gray--dark:    #515151;


/********************
** Style Declarations
********************/

html{
	height: 100%;
	width: 100%;
	background-color: $c-white;
}
body{
	width: 90%;
	max-width: 700px;
	margin: 0 auto;
}
input.search{
	padding: 15px;
	width: 90%;
	@include font-size(20);
	margin: 30px auto;
	display: block;
  border: none;
	border-bottom: 2px solid $c-blue--light;
  background-color: transparent;
  font-family: $f-serif;
  @include transition(all .25s ease-in-out);

	@include bp(sml) {
		padding: 20px;
		border-bottom-width: 2px;
		@include font-size(40);
	}
	@include bp(med) {
		border-bottom-width: 2px;
		width: 100%;
		@include font-size(60);
	}
  &:focus {
    outline: none;
    //background-color: $c-gray--light;
    border-bottom-width: 4px;
    border-bottom-color: $c-blue--dark
  }
  &.error{
    color: $c-red;
    border-bottom-color: $c-red;
  }
}
p.definition{
	font-family: $f-sans;
	font-style: italic;
  margin: 50px 20px;
 	@include line-height(22);
  @include font-size(20);
}
.word{
  font-family: $f-serif;
	font-style: normal;
	font-weight: bold;
  color: $c-red; 
}


// audio.audio{
// 	width: 35px;
// 	height: 35px;
// 	display: inline-block;
// 	background-color: red;
// 	&:hover{
// 		background-color: darken(red, 5);
// 	}
// }



